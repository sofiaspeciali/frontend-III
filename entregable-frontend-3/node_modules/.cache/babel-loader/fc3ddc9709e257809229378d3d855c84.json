{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofi Speciali\\\\Documents\\\\DigitalHouse\\\\SextoBim\\\\primerEntregable\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = _ref => {\n  _s();\n\n  let {\n    nombre,\n    descripcion,\n    stock,\n    funcionAum\n  } = _ref;\n  const [cantStock, setCantStock] = useState(stock);\n\n  const comprar = () => {\n    if (cantStock > 0) {\n      setCantStock(cantStock - 1);\n      funcionAum();\n      console.log(cantStock);\n    }\n  };\n\n  const actualizarStock = () => {\n    if (cantStock > 0) {\n      cantStock;\n    } else {\n      \"Agotado\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: actualizarStock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: comprar,\n      children: \"Comprar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Item, \"BHrdX1EFxlkEDcJADLUSF7yKYvE=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useEffect","useState","Item","nombre","descripcion","stock","funcionAum","cantStock","setCantStock","comprar","console","log","actualizarStock"],"sources":["C:/Users/Sofi Speciali/Documents/DigitalHouse/SextoBim/primerEntregable/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Item = ({nombre, descripcion, stock, funcionAum}) => {\r\n\r\n  const [cantStock, setCantStock] = useState(stock)\r\n\r\n  const comprar = () => {\r\n    if(cantStock > 0){\r\n      setCantStock(cantStock-1);\r\n      funcionAum();\r\n      console.log(cantStock)\r\n    }\r\n  }\r\n  \r\n  const actualizarStock = () => {\r\n    if(cantStock >0){cantStock}\r\n    else {\"Agotado\"}\r\n   \r\n  }\r\n  \r\n  return (\r\n    <div className='producto'>\r\n      <h3>{nombre}</h3>\r\n      <p>{descripcion}</p>\r\n      <h5>En stock:<span>{actualizarStock}</span></h5>\r\n      <button onClick={comprar}>Comprar</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item;"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,IAAI,GAAG,QAA8C;EAAA;;EAAA,IAA7C;IAACC,MAAD;IAASC,WAAT;IAAsBC,KAAtB;IAA6BC;EAA7B,CAA6C;EAEzD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACI,KAAD,CAA1C;;EAEA,MAAMI,OAAO,GAAG,MAAM;IACpB,IAAGF,SAAS,GAAG,CAAf,EAAiB;MACfC,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;MACAD,UAAU;MACVI,OAAO,CAACC,GAAR,CAAYJ,SAAZ;IACD;EACF,CAND;;EAQA,MAAMK,eAAe,GAAG,MAAM;IAC5B,IAAGL,SAAS,GAAE,CAAd,EAAgB;MAACA,SAAS;IAAC,CAA3B,MACK;MAAC;IAAU;EAEjB,CAJD;;EAMA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,UAAKJ;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,qCAAa;QAAA,UAAOQ;MAAP;QAAA;QAAA;QAAA;MAAA,QAAb;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAEH,OAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CA1BD;;GAAMP,I;;KAAAA,I;AA4BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}